[{"/Users/yeronmartin/Desktop/yeronmatin.github.io/src/index.js":"1","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/AppWeather.js":"2","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/CitiesSection.js":"3","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/DataSection.js":"4","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/Background.js":"5","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/js/WeatherApp/weatherAppManager.js":"6","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/WeatherHeadline.js":"7","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/CitiesList.js":"8","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/ForecastRow.js":"9","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/SearchComponent.js":"10","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/js/WeatherApp/variables.js":"11","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/js/WeatherApp/watherScript.js":"12","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/ArrowButton.js":"13","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/MetricItem.js":"14","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/SearhForm.js":"15","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/PlusButton.js":"16","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/ForecastItem.js":"17","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/CityCard.js":"18"},{"size":282,"mtime":1693993504384,"results":"19","hashOfConfig":"20"},{"size":652,"mtime":1689088570468,"results":"21","hashOfConfig":"20"},{"size":479,"mtime":1689086931639,"results":"22","hashOfConfig":"20"},{"size":2434,"mtime":1689086975675,"results":"23","hashOfConfig":"20"},{"size":735,"mtime":1693999225391,"results":"24","hashOfConfig":"20"},{"size":6255,"mtime":1693993068423,"results":"25","hashOfConfig":"20"},{"size":719,"mtime":1689087100064,"results":"26","hashOfConfig":"20"},{"size":1367,"mtime":1689087245185,"results":"27","hashOfConfig":"20"},{"size":379,"mtime":1688998889074,"results":"28","hashOfConfig":"20"},{"size":674,"mtime":1689087067469,"results":"29","hashOfConfig":"20"},{"size":789,"mtime":1689087434037,"results":"30","hashOfConfig":"20"},{"size":1902,"mtime":1689087832437,"results":"31","hashOfConfig":"20"},{"size":427,"mtime":1689086825631,"results":"32","hashOfConfig":"20"},{"size":713,"mtime":1689087212073,"results":"33","hashOfConfig":"20"},{"size":830,"mtime":1689087079042,"results":"34","hashOfConfig":"20"},{"size":573,"mtime":1689087051384,"results":"35","hashOfConfig":"20"},{"size":839,"mtime":1689087019461,"results":"36","hashOfConfig":"20"},{"size":455,"mtime":1689086961730,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1knxcpv",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"41"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"41"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"41"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"41"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/yeronmartin/Desktop/yeronmatin.github.io/src/index.js",[],[],[],"/Users/yeronmartin/Desktop/yeronmatin.github.io/src/AppWeather.js",[],[],"/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/CitiesSection.js",["104"],[],"import React, { useContext, useEffect } from 'react'\n\nimport { CitiesList } from './CitiesList';\nimport { SearchComponent } from './SearchComponent';\nimport { AppManagerContext } from '../../js/WeatherApp/weatherAppManager';\n\n\n\nexport const CitiesSection = () => {\n  const {citySection_state} = useContext (AppManagerContext);\n\n  return (\n    <div className={'container-fluid citySection' + citySection_state}>\n\n        <SearchComponent/>\n        <CitiesList/>\n\n    </div>\n  )\n}\n","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/DataSection.js",["105"],[],"import React, { useContext, useEffect } from 'react'\n\nimport { WeatherHeadline } from './WeatherHeadline';\nimport  {ForecastRow} from './ForecastRow'\nimport { ArrowButton } from './ArrowButton';\nimport { MetricItem } from './MetricItem'\nimport { AppManagerContext } from '../../js/WeatherApp/weatherAppManager';\n\n\nexport const DataSection = () => {\n    const {data} = useContext(AppManagerContext);\n    const {windowSize} = useContext(AppManagerContext);\n    const {dataSection_state} =  useContext(AppManagerContext);\n\n    const returnDataSectionMobile = function(){\n        return (\n            <>\n                <div className='row'>\n                <div className='col-12 metricRow '>\n                        <MetricItem type= {0} value = {data.weather.wind.speed}/>\n                        <MetricItem type= {1} value = {data.weather.main.humidity}/>\n                    </div>\n                </div>\n                <ForecastRow forecast = {data.forecast}/>\n                <div className='row'>\n                    <div className='col-12 metricRow '>\n                        <MetricItem type= {2}  value = {data.weather.main.pressure}/>\n                        <MetricItem type= {3}  value = {data.weather.visibility/1000}/>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    const returnDataSectionDesktop = function(){\n        return (\n            <>\n                <div className='row Datarow'>\n                    <ForecastRow forecast = {data.forecast}/>\n                    <div className='col-12 metricRow '>\n                        <MetricItem type= {0} value = {data.weather.wind.speed}/>\n                        <MetricItem type= {1} value = {data.weather.main.humidity}/>\n                        <MetricItem type= {2}  value = {data.weather.main.pressure}/>\n                        <MetricItem type= {3}  value = {data.weather.visibility/1000}/>\n                    </div>\n                </div>\n            </>\n        )\n    }\n  return (\n    <div className={'container-fluid dataSection' + dataSection_state}>\n        <ArrowButton/>\n        <WeatherHeadline/>\n        <div className='col-12 maxMin'>\n            <p>Max.:{data.weather.main.temp_max.toFixed(0)}<span>ยบ</span></p>\n            <p> Min.:{data.weather.main.temp_min.toFixed(0)}<span>ยบ</span></p>\n        </div>\n        {windowSize[0] < 900 ? returnDataSectionMobile() : returnDataSectionDesktop()}\n    </div>\n  )\n}\n","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/Background.js",["106","107","108","109"],[],"import React, { useContext, useEffect, useState } from 'react';\nimport cloud_1 from '../../img/WeatherApp/backgrounds/cloud_1.svg';\nimport cloud_2 from '../../img/WeatherApp/backgrounds/cloud_2.svg';\nimport { AppManagerContext } from '../../js/WeatherApp/weatherAppManager';\n\n\n\nexport const Background = () => {\n  const {windowSize} = useContext(AppManagerContext);\n  const {background_state} = useContext(AppManagerContext);\n\n  return (\n    <div className={'backgroundDown' + ' cloudBackground'}>\n        <div className='white_background'>\n          {(windowSize[0] <900 )? <img className='cloud_' src={cloud_1} alt='cloud'/> : <img className='cloud_1' src={cloud_2} alt='cloud'/>}\n              \n        </div>\n    </div>\n    \n  )\n}\n","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/js/WeatherApp/weatherAppManager.js",["110","111","112","113","114","115","116","117","118","119","120","121","122"],[],"\nimport { useState, useContext, useEffect } from 'react';\nimport React from 'react'\nimport { checkWeather, checkForecast } from './watherScript';\nimport { capitalizeFirstLetter } from './variables';\n\nexport const AppManagerContext = React.createContext();\n\nexport function AppManagerContextProvider (props) {\n\n    /* VARIABLES */\n    //Global\n    const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight,]);\n    const [inputText, setInputText] = useState ('');\n    const [selectedCity, setSelectedCity] = useState('');\n    const [isRotated, setIsRotated] = useState(false);\n\n    //States\n    const [citySection_state, setCitySection_state] = useState ('Active');\n    const [dataSection_state, setDataSection_state] = useState ('Active');\n    const [background_state, setBackground_state] = useState('Down');\n\n    //Data\n    const [data, setData] = useState({\n        weather: {\n            name: '', \n            main: {\n                humidity: 0,\n                pressure: 0, \n                temp: 0.00,\n                temp_max: 0.00,\n                temp_min: 0.00 \n            },\n            visibility: 0,\n            wind: {speed: 0}\n        },\n        forecast : [{\n            dt : 1688245200,\n            main :{\n                temp: 0\n            }\n        }]\n    });\n\n    //City List\n    const [currentId, setCurrentId] = useState(2);\n    const [cityList, setCityList] = useState ([{city: 'Madrid', temp: 0, id:0}, \n    {city: 'London', temp: 0, id:1}]);\n    const [cityNames, setCityNames] = useState(['Madrid', 'London']);\n\n    /* FUNCTIONS */\n    //Buttons\n    const arrowButton_OnClick = function(){\n        setSelectedCity('');\n        setData(({\n          weather: {\n            name: '', \n            main: {\n              humidity: 0,\n              pressure: 0, \n              temp: 0.00,\n              temp_max: 0.00,\n              temp_min: 0.00 \n            },\n            visibility: 0,\n            wind: {speed: 0}\n          },\n          forecast : [{\n            dt : 1688245200,\n            main :{\n              temp: 0\n            }\n          }]\n        }));\n    }\n\n    const addCity = async function(c) {\n        const str = capitalizeFirstLetter(c.toLowerCase());\n        \n        if (!cityNames.includes(str) && str != ''){\n            const data = await checkWeather(c);\n            if (data.hasOwnProperty('weather') ){\n                setCityList([...cityList, {city: str, temp: data.main.temp.toFixed(0), id: currentId}]);\n                setCurrentId(currentId + 1);\n                setCityNames([...cityNames, str]);\n                setSelectedCity(str);\n            }\n        }else{\n            setInputText('');\n        }\n    }\n\n    /*\n        This method wraps the addCity async method\n    */\n    const addCityWrapper =  async function () {\n        addCity(inputText);\n      }\n\n    /*\n    This meethod refresh all the city data\n   */\n    const refreshWeather = async function() {\n        setCityList([]);\n        let arr = []\n        for (let i = 0; i< cityNames.length; i++){\n        var data = (await checkWeather(cityNames[i]));;\n        arr.push({city: data.name, temp: data.main.temp.toFixed(0), id:i});\n        }\n        setCityList([...arr]);\n    } \n\n    const setCity_OnClick = function (city) {  \n        selectCity(city)\n      }\n\n    const handleSubmit =  function(e) {\n        // Prevent the browser from reloading the page\n        e.preventDefault();\n        addCity(inputText);\n      } \n\n      const onChangeHandle = function (e) {\n        setInputText(e.target.value);\n        \n      };\n\n    //Data \n    const getData= async function(city){\n        const dat = await checkWeather(city);\n        const forecast = await checkForecast(city)\n        setData({\n          ...data, // copy the current properties of \"json\"\n          weather: {\n            name: dat.name,\n            main: {\n              humidity: dat.main.humidity,\n              pressure: dat.main.pressure, \n              temp: dat.main.temp,\n              temp_max: dat.main.temp_max,\n              temp_min: dat.main.temp_min \n            },\n            visibility: dat.visibility,\n            wind: {\n              speed: dat.wind.speed\n            }\n          },\n          forecast : forecast.list\n        });\n    }\n\n    const selectCity = function (city){\n        setSelectedCity(city);\n    }\n    \n    /* USE EFFECTS */\n    useEffect(() => {\n        const handleWindowResize = () => {\n          setWindowSize([window.innerWidth, window.innerHeight]);\n        };\n    \n        window.addEventListener('resize', handleWindowResize);\n        if (windowSize[0] > 900){\n            setCitySection_state('Active');\n            if (selectedCity == ''){\n                selectCity (cityNames[0]);\n            }\n        }else{\n            if (dataSection_state == 'Active' && citySection_state == 'Active'){\n                setDataSection_state('Hidden');\n                setBackground_state('Down');\n            }\n        }\n    \n        return () => {\n          window.removeEventListener('resize', handleWindowResize);\n        };\n      }, [windowSize]);\n     \n      useEffect (() => {\n        if(selectedCity != ''){\n            getData(selectedCity); \n            setInputText('');\n            addCityWrapper();\n        }\n      }, [selectedCity]);\n\n      useEffect (() => {\n        if (windowSize[0] < 900){\n            (selectedCity == '') ?  setCitySection_state('Active') :  setCitySection_state('Hidden');\n            (data.weather.name != '') ? setBackground_state('Up') : setBackground_state('Down');\n            (selectedCity != '') ?  setDataSection_state('Active') :  setDataSection_state('Hidden');\n        }\n      }, [data]);\n\n    /*\n        When cciityNames' value changes it refresh\n    */\n    useEffect(() => {\n        refreshWeather();\n    }, [cityNames]);\n\n\n\n    return (\n        <>\n            <AppManagerContext.Provider value={{windowSize, inputText, data, setData, setInputText, addCity, selectedCity, setSelectedCity, cityList,\n            citySection_state, dataSection_state, isRotated, setIsRotated, background_state, arrowButton_OnClick, setCity_OnClick, handleSubmit, onChangeHandle}}>\n                {props.children}\n            </AppManagerContext.Provider>\n        </>\n    );\n}\n","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/WeatherHeadline.js",["123"],[],"import React, { useContext } from 'react'\nimport { useState } from 'react';\nimport sunIcon from '../../img/WeatherApp/wather/sunIcon.svg';\nimport { AppManagerContext } from '../../js/WeatherApp/weatherAppManager';\n\n\nexport const WeatherHeadline = () => {\n  const [weather, Setweather] = useState(sunIcon);\n  const {data} = useContext(AppManagerContext);\n  \n  return (\n    <div className='row'>\n      <div className='HeadLine col-12'>\n          <div className='boxImg'>\n              <img src={weather} alt='Headline Icon' />\n          </div>\n          <p className='city'>{data.weather.name}</p>\n          <p className='currentTemp'>{data.weather.main.temp.toFixed(0)}<span>ยบC</span></p>\n      </div>\n    </div>\n  )\n}\n","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/CitiesList.js",["124","125"],[],"import React, { useContext } from 'react'\n\nimport { CityCard } from './CityCard'\nimport { AppManagerContext } from '../../js/WeatherApp/weatherAppManager';\n\n\nexport const CitiesList = () => {\n\n  const {currentId} = useContext(AppManagerContext);\n  const {setCity_OnClick} = useContext(AppManagerContext);\n  const {cityList} = useContext(AppManagerContext);\n  const {cityNames} = useContext(AppManagerContext);\n\n  const items = cityList.map((item) =>\n        <li key={item.id} onClick={() => setCity_OnClick(item.city)}><CityCard data = {[item.city, item.temp]}/></li>\n  );\n\n  \n  \n\n  /*\n    AddCity method get a string (a city name) and get all the data \n    related to that city. Then iitt checks if the ciity has already \n    been added to the cityList and cityNames, if not it will add it\n  */\n  /*const addCity = async function(c) {\n\n    let data = await checkWeather(c);\n    const str = capitalizeFirstLetter(c.toLowerCase());\n    \n    if (data.hasOwnProperty('weather') && !cityNames.includes(str)){\n      setCityList([...cityList, {city: str, temp: data.main.temp.toFixed(0), id: currentId}]);\n      setCurrentId(currentId + 1);\n      setCityNames([...cityNames, str]);\n\n    }\n  } */\n\n  \n\n\n  return (\n    <div className='row citiesList'>\n        <div className='col-12'>\n            <ul>\n               {items}\n            </ul>\n        </div>\n    </div>\n  )\n}\n","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/ForecastRow.js",[],[],"/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/SearchComponent.js",[],[],"/Users/yeronmartin/Desktop/yeronmatin.github.io/src/js/WeatherApp/variables.js",[],[],"/Users/yeronmartin/Desktop/yeronmatin.github.io/src/js/WeatherApp/watherScript.js",["126","127"],[],"import {days} from './variables';\n\nvar apiKey = 'f9892889e00ba696ec9d7c610b9e3f38';\nvar apiURL = 'https://api.openweathermap.org/data/2.5/weather?&units=metric';\nvar apiURL_forecast = 'https://api.openweathermap.org/data/2.5/forecast?&units=metric';\n\nexport async function checkWeather (city){\n    const response = await fetch(apiURL + '&appid='+apiKey + '&q=' + city);\n    var data = await response.json();\n    return data;\n}\nexport async function checkForecast (city){\n    const response = await fetch(apiURL_forecast + '&appid='+apiKey + '&q=' +city);\n    var data = await response.json();\n    return data;\n}\n\nexport async function getTemp (city){\n    const response = await fetch(apiURL + '&appid='+apiKey + '&q=' +city);\n    var data = await response.json();\n    return data;\n}\n\n\nexport const getMaxTempt =  function(dayOffset, forecast){\n    let values = [];\n    let day = new Date().getDay() + dayOffset;\n    day = (day > 6)? day% 7 : day;\n    let dayTxt = new Date(forecast[0].dt* 1000).getDay();\n\n    for (let i = 0; i < forecast.length ; i++){\n        if(dayTxt == day){\n            values.push(forecast[i].main.temp);\n        }\n        dayTxt = new Date(forecast[i].dt* 1000).getDay();\n    }\n    return Math.max(...values).toFixed(0);\n}\n\nexport const getMinTempt =  function(dayOffset, forecast){\n    let values = [];\n    let day = new Date().getDay() + dayOffset;\n    day = (day > 6)? day% 7 : day;\n    let dayTxt = new Date(forecast[0].dt* 1000).getDay();\n\n    for (let i = 0; i < forecast.length ; i++){\n        if(dayTxt == day){\n            values.push(forecast[i].main.temp);\n        }\n        dayTxt = new Date(forecast[i].dt* 1000).getDay();\n    }\n    return Math.min(...values).toFixed(0);\n}\n\n\nexport const getDay = function(i){\n    let dayTxt = new Date().getDay() -1 + i;\n    dayTxt = (dayTxt> 6)? dayTxt%7 : dayTxt;\n    return days[dayTxt];\n}\n\n//console.log(forecastData);\n\n\n\n\n\n\n","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/ArrowButton.js",[],[],"/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/MetricItem.js",["128","129","130","131"],[],"import React from 'react'\nimport { useState } from 'react';\n\nimport {metricIcons, metrics, units} from '../../js/WeatherApp/variables'\n\nexport const MetricItem = (props) => {\n  var setMetricsData;\n\n  const [icon, setIcon] = useState(metricIcons[props.type]);\n  const [metric, setMetric] = useState(metrics[props.type]);\n  const [unit, setUnit] = useState(units[props.type]);\n  \n\n  return (\n    <div className='MetricItem'>\n        <div className='boxImg'>\n            <img src={icon} alt='Metric Icon'/>\n        </div>\n        <div className='boxInfo'>\n            <p className='value'>{props.value.toFixed(0)}<span>{unit}</span></p>\n            <p className='metric'>{metric}</p>\n        </div>\n    </div>\n  )\n}\n","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/SearhForm.js",["132","133","134","135"],[],"import React, { useContext } from 'react'\nimport { AppManagerContext } from '../../js/WeatherApp/weatherAppManager';\n\n\nexport const SearhForm = (props)  => {\n  const {cityNames} = useContext(AppManagerContext);\n  const {setCityNames} = useContext(AppManagerContext);\n\n\n  const {inputText} = useContext(AppManagerContext);\n  const {setInputText} = useContext (AppManagerContext);\n  const {setSelectedCity} = useContext (AppManagerContext);\n  const {handleSubmit} =  useContext (AppManagerContext);\n  const {onChangeHandle} = useContext (AppManagerContext);\n\n  return (\n    <form className=\"d-flex searchForm\" onSubmit={handleSubmit} >\n        <input className={\"form-control \" + props.state}  type=\"search\" placeholder=\"Write a city...\" aria-label=\"Search\" \n        value={inputText} onChange={onChangeHandle}/> \n    </form>\n  )\n}\n","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/PlusButton.js",["136","137"],[],"import React, { useRef } from 'react'\nimport { useState, useEffect } from 'react';\nimport plusIcon from '../../img/WeatherApp/buttons/plusIcon.png';\n\nexport const PlusButton = (props) => {\n    let buttonRef = useRef();\n    \n    useEffect(() => {\n        let handler = (e) =>{\n    \n        }\n        document.addEventListener('mousedown', handler);\n    });\n\n  return (\n    <button className={'AddRemoveButton btn ' + props.state} onClick={props.function}>\n        <div className='boxImg'>\n            <img src={plusIcon} alt=\"Plus Icon\"/>\n        </div>\n    </button>\n  )\n}\n","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/ForecastItem.js",["138","139","140","141","142"],[],"import React from 'react'\nimport { useState } from 'react';\n\n\nimport sunIcon from '../../img/WeatherApp/forecast/sunIcon_forecast.svg';\nimport {getDay, getMaxTempt, getMinTempt} from '../../js/WeatherApp/watherScript'\n\nexport const ForecastItem = (props) => {\n \n  //const [icon, setIcon] = useState();\n  const [day, setDay] = useState(getDay(props.i));\n  const [maxTemp, setMaxTemp] = useState(getMaxTempt(props.i, props.forecast));\n  const [minTemp, setMinTemp] = useState(getMinTempt(props.i, props.forecast));\n  \n  return (\n    <div className='forecastItem'>\n        <p className='day'>{day}</p>\n        <div className='boxImg'>\n            <img src= {sunIcon} alt=\"Forecast Item Icon\"/>\n        </div>\n        <p>{getMaxTempt(props.i, props.forecast)}ยบ</p>\n        <p>{getMinTempt(props.i, props.forecast)}ยบ</p>\n        </div>\n  )\n}\n","/Users/yeronmartin/Desktop/yeronmatin.github.io/src/components/WeatherApp/CityCard.js",[],[],{"ruleId":"143","severity":1,"message":"144","line":1,"column":29,"nodeType":"145","messageId":"146","endLine":1,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":1,"column":29,"nodeType":"145","messageId":"146","endLine":1,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":1,"column":29,"nodeType":"145","messageId":"146","endLine":1,"endColumn":38},{"ruleId":"143","severity":1,"message":"147","line":1,"column":40,"nodeType":"145","messageId":"146","endLine":1,"endColumn":48},{"ruleId":"143","severity":1,"message":"148","line":10,"column":10,"nodeType":"145","messageId":"146","endLine":10,"endColumn":26},{"ruleId":"149","severity":1,"message":"150","line":13,"column":38,"nodeType":"151","messageId":"152","endLine":13,"endColumn":39},{"ruleId":"143","severity":1,"message":"153","line":2,"column":20,"nodeType":"145","messageId":"146","endLine":2,"endColumn":30},{"ruleId":"154","severity":1,"message":"155","line":80,"column":45,"nodeType":"151","messageId":"156","endLine":80,"endColumn":47},{"ruleId":"154","severity":1,"message":"157","line":165,"column":30,"nodeType":"151","messageId":"156","endLine":165,"endColumn":32},{"ruleId":"154","severity":1,"message":"157","line":169,"column":35,"nodeType":"151","messageId":"156","endLine":169,"endColumn":37},{"ruleId":"154","severity":1,"message":"157","line":169,"column":68,"nodeType":"151","messageId":"156","endLine":169,"endColumn":70},{"ruleId":"158","severity":1,"message":"159","line":178,"column":10,"nodeType":"160","endLine":178,"endColumn":22,"suggestions":"161"},{"ruleId":"154","severity":1,"message":"155","line":181,"column":25,"nodeType":"151","messageId":"156","endLine":181,"endColumn":27},{"ruleId":"158","severity":1,"message":"162","line":186,"column":10,"nodeType":"160","endLine":186,"endColumn":24,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"157","line":190,"column":27,"nodeType":"151","messageId":"156","endLine":190,"endColumn":29},{"ruleId":"154","severity":1,"message":"155","line":191,"column":32,"nodeType":"151","messageId":"156","endLine":191,"endColumn":34},{"ruleId":"154","severity":1,"message":"155","line":192,"column":27,"nodeType":"151","messageId":"156","endLine":192,"endColumn":29},{"ruleId":"158","severity":1,"message":"164","line":194,"column":10,"nodeType":"160","endLine":194,"endColumn":16,"suggestions":"165"},{"ruleId":"158","severity":1,"message":"166","line":201,"column":8,"nodeType":"160","endLine":201,"endColumn":19,"suggestions":"167"},{"ruleId":"143","severity":1,"message":"168","line":8,"column":19,"nodeType":"145","messageId":"146","endLine":8,"endColumn":29},{"ruleId":"143","severity":1,"message":"169","line":9,"column":10,"nodeType":"145","messageId":"146","endLine":9,"endColumn":19},{"ruleId":"143","severity":1,"message":"170","line":12,"column":10,"nodeType":"145","messageId":"146","endLine":12,"endColumn":19},{"ruleId":"154","severity":1,"message":"157","line":32,"column":19,"nodeType":"151","messageId":"156","endLine":32,"endColumn":21},{"ruleId":"154","severity":1,"message":"157","line":47,"column":19,"nodeType":"151","messageId":"156","endLine":47,"endColumn":21},{"ruleId":"143","severity":1,"message":"171","line":7,"column":7,"nodeType":"145","messageId":"146","endLine":7,"endColumn":21},{"ruleId":"143","severity":1,"message":"172","line":9,"column":16,"nodeType":"145","messageId":"146","endLine":9,"endColumn":23},{"ruleId":"143","severity":1,"message":"173","line":10,"column":18,"nodeType":"145","messageId":"146","endLine":10,"endColumn":27},{"ruleId":"143","severity":1,"message":"174","line":11,"column":16,"nodeType":"145","messageId":"146","endLine":11,"endColumn":23},{"ruleId":"143","severity":1,"message":"170","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":19},{"ruleId":"143","severity":1,"message":"175","line":7,"column":10,"nodeType":"145","messageId":"146","endLine":7,"endColumn":22},{"ruleId":"143","severity":1,"message":"176","line":11,"column":10,"nodeType":"145","messageId":"146","endLine":11,"endColumn":22},{"ruleId":"143","severity":1,"message":"177","line":12,"column":10,"nodeType":"145","messageId":"146","endLine":12,"endColumn":25},{"ruleId":"143","severity":1,"message":"147","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":18},{"ruleId":"143","severity":1,"message":"178","line":6,"column":9,"nodeType":"145","messageId":"146","endLine":6,"endColumn":18},{"ruleId":"143","severity":1,"message":"179","line":11,"column":15,"nodeType":"145","messageId":"146","endLine":11,"endColumn":21},{"ruleId":"143","severity":1,"message":"180","line":12,"column":10,"nodeType":"145","messageId":"146","endLine":12,"endColumn":17},{"ruleId":"143","severity":1,"message":"181","line":12,"column":19,"nodeType":"145","messageId":"146","endLine":12,"endColumn":29},{"ruleId":"143","severity":1,"message":"182","line":13,"column":10,"nodeType":"145","messageId":"146","endLine":13,"endColumn":17},{"ruleId":"143","severity":1,"message":"183","line":13,"column":19,"nodeType":"145","messageId":"146","endLine":13,"endColumn":29},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'background_state' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useContext' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cityNames', 'citySection_state', 'dataSection_state', and 'selectedCity'. Either include them or remove the dependency array.","ArrayExpression",["184"],"React Hook useEffect has missing dependencies: 'addCityWrapper' and 'getData'. Either include them or remove the dependency array.",["185"],"React Hook useEffect has missing dependencies: 'selectedCity' and 'windowSize'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has a missing dependency: 'refreshWeather'. Either include it or remove the dependency array.",["187"],"'Setweather' is assigned a value but never used.","'currentId' is assigned a value but never used.","'cityNames' is assigned a value but never used.","'setMetricsData' is defined but never used.","'setIcon' is assigned a value but never used.","'setMetric' is assigned a value but never used.","'setUnit' is assigned a value but never used.","'setCityNames' is assigned a value but never used.","'setInputText' is assigned a value but never used.","'setSelectedCity' is assigned a value but never used.","'buttonRef' is assigned a value but never used.","'setDay' is assigned a value but never used.","'maxTemp' is assigned a value but never used.","'setMaxTemp' is assigned a value but never used.","'minTemp' is assigned a value but never used.","'setMinTemp' is assigned a value but never used.",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [cityNames, citySection_state, dataSection_state, selectedCity, windowSize]",{"range":"196","text":"197"},"Update the dependencies array to be: [addCityWrapper, getData, selectedCity]",{"range":"198","text":"199"},"Update the dependencies array to be: [data, selectedCity, windowSize]",{"range":"200","text":"201"},"Update the dependencies array to be: [cityNames, refreshWeather]",{"range":"202","text":"203"},[5085,5097],"[cityNames, citySection_state, dataSection_state, selectedCity, windowSize]",[5278,5292],"[addCityWrapper, getData, selectedCity]",[5675,5681],"[data, selectedCity, windowSize]",[5805,5816],"[cityNames, refreshWeather]"]