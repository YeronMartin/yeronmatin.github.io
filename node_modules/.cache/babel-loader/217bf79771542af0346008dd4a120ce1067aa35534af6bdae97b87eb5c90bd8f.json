{"ast":null,"code":"var _jsxFileName = \"/Users/yeronmartin/Desktop/web/src/js/MediaApp/mediaAppManager.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect } from 'react';\nimport React from 'react';\nimport * as social from '../../js/MediaApp/mediaScript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MediaAppManagerContext = /*#__PURE__*/React.createContext();\nexport function MediaAppManagerContextProvider(props) {\n  _s();\n  /* VARIABLES */\n  //Global\n  const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight]);\n  const [inputText, setInputText] = useState('');\n  const [messageType, setMessageType] = useState('Text');\n  const [user, setUser] = useState('Manolo');\n  const [messageID, setMessageID] = useState(3);\n  const [messageList, setMessafeList] = useState([]);\n  useEffect(() => {\n    a(1);\n  }, []);\n  const a = async function (id) {\n    const messageListJSON = await social.getMessageListByChatId(id);\n    const users = await social.getUserUserNameListChatId(id);\n    //console.log(messageListJSON[id].text);\n    //setMessafeList([...messageList, {text: messageListJSON[0].text, hour: messageListJSON[0].time, messageState: messageListJSON.state, author: users[0], id: 0}]);\n    var s = \"\";\n    for (var i; i < messageListJSON.length; i++) {\n      s = JSON.stringify({\n        \"text\": \"\",\n        \"hour\": \"2023-07-15T21:50:04.091+00:00\",\n        \"state\": \"\"\n      });\n      console.log(s);\n    }\n\n    //setMessafeList([s]);\n  };\n\n  /* FUNCTIONS */\n  const handleSubmit = function (e) {\n    // Prevent the browser from reloading the page\n    e.preventDefault();\n    addNewMessaage();\n  };\n  const onChangeHandle = function (e) {\n    setInputText(e.target.value);\n  };\n  const addNewMessaage = function () {\n    setMessafeList([...messageList, {\n      text: inputText,\n      hour: '10:00 p.m',\n      messageState: 'Send',\n      author: user,\n      id: messageID\n    }]);\n    setMessageID(messageID + 1);\n    setInputText('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MediaAppManagerContext.Provider, {\n      value: {\n        windowSize,\n        inputText,\n        setInputText,\n        messageType,\n        handleSubmit,\n        onChangeHandle,\n        user,\n        messageList\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(MediaAppManagerContextProvider, \"QphVOrdLqvy8OSWzlr5Vow8JP7c=\");\n_c = MediaAppManagerContextProvider;\nvar _c;\n$RefreshReg$(_c, \"MediaAppManagerContextProvider\");","map":{"version":3,"names":["useState","useContext","useEffect","React","social","jsxDEV","_jsxDEV","Fragment","_Fragment","MediaAppManagerContext","createContext","MediaAppManagerContextProvider","props","_s","windowSize","setWindowSize","window","innerWidth","innerHeight","inputText","setInputText","messageType","setMessageType","user","setUser","messageID","setMessageID","messageList","setMessafeList","a","id","messageListJSON","getMessageListByChatId","users","getUserUserNameListChatId","s","i","length","JSON","stringify","console","log","handleSubmit","e","preventDefault","addNewMessaage","onChangeHandle","target","value","text","hour","messageState","author","children","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeronmartin/Desktop/web/src/js/MediaApp/mediaAppManager.js"],"sourcesContent":["\nimport { useState, useContext, useEffect } from 'react';\nimport React from 'react'\n\nimport * as social from '../../js/MediaApp/mediaScript'\n\nexport const MediaAppManagerContext = React.createContext();\n\nexport function MediaAppManagerContextProvider (props) {\n\n    /* VARIABLES */\n    //Global\n    const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight,]);\n    const [inputText, setInputText] = useState ('');\n    const [messageType, setMessageType] = useState('Text');\n    const [user, setUser] = useState ('Manolo');\n\n    const [messageID, setMessageID] = useState (3);\n    const [messageList, setMessafeList] = useState([\n    ]);\n\n    useEffect (() => {\n        a(1);\n    }, []);\n\n    const a = async function (id){\n        const messageListJSON= await social.getMessageListByChatId(id);\n        const users = await social.getUserUserNameListChatId(id);\n        //console.log(messageListJSON[id].text);\n        //setMessafeList([...messageList, {text: messageListJSON[0].text, hour: messageListJSON[0].time, messageState: messageListJSON.state, author: users[0], id: 0}]);\n        var s = \"\";\n        for(var i; i < messageListJSON.length ; i++){\n            s = JSON.stringify({\n                \"text\" : \"\",\n                \"hour\" :  \"2023-07-15T21:50:04.091+00:00\",\n                \"state\" : \"\"\n            });\n            console.log(s);\n        }\n        \n        //setMessafeList([s]);\n\n    }\n\n    /* FUNCTIONS */\n    const handleSubmit =  function(e) {\n        // Prevent the browser from reloading the page\n        e.preventDefault();\n        addNewMessaage ();\n    } \n\n    const onChangeHandle = function (e) {\n        setInputText(e.target.value);\n        \n    };\n\n    const addNewMessaage = function (){\n        setMessafeList ([...messageList, \n            {text: inputText, hour: '10:00 p.m', messageState: 'Send', author: user, id: messageID} ]);\n        setMessageID(messageID +1);\n        setInputText('');\n\n    }\n\n    return (\n        <>\n            <MediaAppManagerContext.Provider value={{windowSize, inputText, setInputText, messageType, handleSubmit, onChangeHandle, user, messageList}}>\n                {props.children}\n            </MediaAppManagerContext.Provider>\n        </>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}