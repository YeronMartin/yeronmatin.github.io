{"ast":null,"code":"var _jsxFileName = \"/Users/yeronmartin/Desktop/web/src/js/weatherAppManager.js\",\n  _s = $RefreshSig$();\nimport { type } from '@testing-library/user-event/dist/type';\nimport { useState, useContext, useEffect } from 'react';\nimport React from 'react';\nimport { checkWeather, checkForecast } from './watherScript';\nimport { capitalizeFirstLetter } from './variables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AppManagerContext = /*#__PURE__*/React.createContext();\nexport function AppManagerContextProvider(props) {\n  _s();\n  /* VARIABLES */\n\n  //Global\n  const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight]);\n  const [inputText, setInputText] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [dataHidden, setDataHidden] = useState(true);\n\n  //States\n  const [citySection_state, setCitySection_state] = useState('Active');\n\n  //Data\n  const [data, setData] = useState({\n    weather: {\n      name: '',\n      main: {\n        humidity: 0,\n        pressure: 0,\n        temp: 0.00,\n        temp_max: 0.00,\n        temp_min: 0.00\n      },\n      visibility: 0,\n      wind: {\n        speed: 0\n      }\n    },\n    forecast: [{\n      dt: 1688245200,\n      main: {\n        temp: 0\n      }\n    }]\n  });\n\n  //City List\n  const [currentId, setCurrentId] = useState(2);\n  const [cityList, setCityList] = useState([{\n    city: '',\n    temp: 0,\n    id: 0\n  }, {\n    city: '',\n    temp: 0,\n    id: 1\n  }]);\n  const [cityNames, setCityNames] = useState(['Madrid', 'London']);\n\n  /* FUNCTIONS */\n  const addCity = async function (c) {\n    let data = await checkWeather(c);\n    const str = capitalizeFirstLetter(c.toLowerCase());\n    if (data.hasOwnProperty('weather') && !cityNames.includes(str)) {\n      setCityList([...cityList, {\n        city: str,\n        temp: data.main.temp.toFixed(0),\n        id: currentId\n      }]);\n      setCurrentId(currentId + 1);\n      setCityNames([...cityNames, str]);\n    }\n  };\n\n  //Data \n  const getData = async function (city) {\n    const dat = await checkWeather(city);\n    const forecast = await checkForecast(city);\n    setData({\n      ...data,\n      // copy the current properties of \"json\"\n      weather: {\n        name: dat.name,\n        main: {\n          humidity: dat.main.humidity,\n          pressure: dat.main.pressure,\n          temp: dat.main.temp,\n          temp_max: dat.main.temp_max,\n          temp_min: dat.main.temp_min\n        },\n        visibility: dat.visibility,\n        wind: {\n          speed: dat.wind.speed\n        }\n      },\n      forecast: forecast.list\n    });\n  };\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWindowSize([window.innerWidth, window.innerHeight]);\n    };\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [windowSize]);\n  useEffect(() => {\n    if (selectedCity != '') {\n      getData(selectedCity);\n      setInputText('');\n    }\n  }, [selectedCity]);\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  useEffect(() => {\n    selectedCity == '' ? setCitySection_state('Active') : setCitySection_state('Hidden');\n    //(props.windowSize[0] > 900 && props.selectedCity == '') ?  setState('Active') : setState('Hidden') ;\n  }, [props.data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppManagerContext.Provider, {\n      value: {\n        windowSize,\n        inputText,\n        setInputText,\n        addCity,\n        selectedCity,\n        setSelectedCity,\n        citySection_state,\n        setCitySection_state\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(AppManagerContextProvider, \"C7x8YuSXsJWi4ESQJD2xJaELBpI=\");\n_c = AppManagerContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppManagerContextProvider\");","map":{"version":3,"names":["type","useState","useContext","useEffect","React","checkWeather","checkForecast","capitalizeFirstLetter","jsxDEV","_jsxDEV","Fragment","_Fragment","AppManagerContext","createContext","AppManagerContextProvider","props","_s","windowSize","setWindowSize","window","innerWidth","innerHeight","inputText","setInputText","selectedCity","setSelectedCity","dataHidden","setDataHidden","citySection_state","setCitySection_state","data","setData","weather","name","main","humidity","pressure","temp","temp_max","temp_min","visibility","wind","speed","forecast","dt","currentId","setCurrentId","cityList","setCityList","city","id","cityNames","setCityNames","addCity","c","str","toLowerCase","hasOwnProperty","includes","toFixed","getData","dat","list","handleWindowResize","addEventListener","removeEventListener","console","log","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeronmartin/Desktop/web/src/js/weatherAppManager.js"],"sourcesContent":["import { type } from '@testing-library/user-event/dist/type';\nimport { useState, useContext, useEffect } from 'react';\nimport React from 'react'\nimport { checkWeather, checkForecast } from './watherScript';\nimport { capitalizeFirstLetter } from './variables';\n\nexport const AppManagerContext = React.createContext();\n\nexport function AppManagerContextProvider (props) {\n\n    /* VARIABLES */\n\n    //Global\n    const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight,]);\n    const [inputText, setInputText] = useState ('');\n    const [selectedCity, setSelectedCity] = useState('');\n    const [dataHidden, setDataHidden] = useState (true);\n\n    //States\n    const [citySection_state, setCitySection_state] = useState ('Active');\n\n    //Data\n    const [data, setData] = useState({\n        weather: {\n        name: '', \n        main: {\n            humidity: 0,\n            pressure: 0, \n            temp: 0.00,\n            temp_max: 0.00,\n            temp_min: 0.00 \n        },\n        visibility: 0,\n        wind: {speed: 0}\n        },\n        forecast : [{\n        dt : 1688245200,\n        main :{\n            temp: 0\n        }\n        }]\n    });\n\n    //City List\n    const [currentId, setCurrentId] = useState(2);\n    const [cityList, setCityList] = useState ([{city: '', temp: 0, id:0}, \n    {city: '', temp: 0, id:1}]);\n    const [cityNames, setCityNames] = useState(['Madrid', 'London']);\n\n    /* FUNCTIONS */\n    const addCity = async function(c) {\n        let data = await checkWeather(c);\n        const str = capitalizeFirstLetter(c.toLowerCase());\n        \n        if (data.hasOwnProperty('weather') && !cityNames.includes(str)){\n          setCityList([...cityList, {city: str, temp: data.main.temp.toFixed(0), id: currentId}]);\n          setCurrentId(currentId + 1);\n          setCityNames([...cityNames, str]);\n    \n        }\n    } \n\n    //Data \n    const getData= async function(city){\n        const dat = await checkWeather(city);\n        const forecast = await checkForecast(city)\n        setData({\n          ...data, // copy the current properties of \"json\"\n          weather: {\n            name: dat.name,\n            main: {\n              humidity: dat.main.humidity,\n              pressure: dat.main.pressure, \n              temp: dat.main.temp,\n              temp_max: dat.main.temp_max,\n              temp_min: dat.main.temp_min \n            },\n            visibility: dat.visibility,\n            wind: {\n              speed: dat.wind.speed\n            }\n          },\n          forecast : forecast.list\n        });\n    }\n    \n\n    useEffect(() => {\n        const handleWindowResize = () => {\n          setWindowSize([window.innerWidth, window.innerHeight]);\n        };\n    \n        window.addEventListener('resize', handleWindowResize);\n    \n        return () => {\n          window.removeEventListener('resize', handleWindowResize);\n        };\n      }, [windowSize]);\n     \n      useEffect (() => {\n        if(selectedCity != ''){\n         getData(selectedCity); \n         setInputText('');\n        }\n      }, [selectedCity]);\n    \n      useEffect (() => {\n        console.log(data);\n      }, [data]);\n\n      useEffect (() => {\n        (selectedCity == '') ?  setCitySection_state('Active') :  setCitySection_state('Hidden');\n        //(props.windowSize[0] > 900 && props.selectedCity == '') ?  setState('Active') : setState('Hidden') ;\n    \n      }, [props.data]);\n\n\n    return (\n        <>\n            <AppManagerContext.Provider value={{windowSize, inputText, setInputText, addCity, selectedCity, setSelectedCity,\n            citySection_state, setCitySection_state}}>\n                {props.children}\n            </AppManagerContext.Provider>\n        </>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}