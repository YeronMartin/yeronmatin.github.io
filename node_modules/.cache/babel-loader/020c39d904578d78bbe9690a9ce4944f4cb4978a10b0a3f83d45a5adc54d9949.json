{"ast":null,"code":"import { days } from '../WeatherApp/variables';\nvar apiKey = 'f9892889e00ba696ec9d7c610b9e3f38';\nvar apiURL = 'https://api.openweathermap.org/data/2.5/weather?&units=metric';\nvar apiURL_forecast = 'https://api.openweathermap.org/data/2.5/forecast?&units=metric';\nexport async function checkWeather(city) {\n  const response = await fetch(apiURL + '&appid=' + apiKey + '&q=' + city);\n  var data = await response.json();\n  return data;\n}\nexport async function checkForecast(city) {\n  const response = await fetch(apiURL_forecast + '&appid=' + apiKey + '&q=' + city);\n  var data = await response.json();\n  return data;\n}\nexport async function getTemp(city) {\n  const response = await fetch(apiURL + '&appid=' + apiKey + '&q=' + city);\n  var data = await response.json();\n  return data;\n}\nexport const getMaxTempt = function (dayOffset, forecast) {\n  let values = [];\n  let day = new Date().getDay() + dayOffset;\n  day = day > 6 ? day % 7 : day;\n  let dayTxt = new Date(forecast[0].dt * 1000).getDay();\n  for (let i = 0; i < forecast.length; i++) {\n    if (dayTxt == day) {\n      values.push(forecast[i].main.temp);\n    }\n    dayTxt = new Date(forecast[i].dt * 1000).getDay();\n  }\n  return Math.max(...values).toFixed(0);\n};\nexport const getMinTempt = function (dayOffset, forecast) {\n  let values = [];\n  let day = new Date().getDay() + dayOffset;\n  day = day > 6 ? day % 7 : day;\n  let dayTxt = new Date(forecast[0].dt * 1000).getDay();\n  for (let i = 0; i < forecast.length; i++) {\n    if (dayTxt == day) {\n      values.push(forecast[i].main.temp);\n    }\n    dayTxt = new Date(forecast[i].dt * 1000).getDay();\n  }\n  return Math.min(...values).toFixed(0);\n};\nexport const getDay = function (i) {\n  let dayTxt = new Date().getDay() - 1 + i;\n  dayTxt = dayTxt > 6 ? dayTxt % 7 : dayTxt;\n  return days[dayTxt];\n};\n\n//console.log(forecastData);","map":{"version":3,"names":["days","apiKey","apiURL","apiURL_forecast","checkWeather","city","response","fetch","data","json","checkForecast","getTemp","getMaxTempt","dayOffset","forecast","values","day","Date","getDay","dayTxt","dt","i","length","push","main","temp","Math","max","toFixed","getMinTempt","min"],"sources":["/Users/yeronmartin/Desktop/web/src/js/WeatherApp/watherScript.js"],"sourcesContent":["import {days} from '../WeatherApp/variables';\n\nvar apiKey = 'f9892889e00ba696ec9d7c610b9e3f38';\nvar apiURL = 'https://api.openweathermap.org/data/2.5/weather?&units=metric';\nvar apiURL_forecast = 'https://api.openweathermap.org/data/2.5/forecast?&units=metric';\n\nexport async function checkWeather (city){\n    const response = await fetch(apiURL + '&appid='+apiKey + '&q=' + city);\n    var data = await response.json();\n    return data;\n}\nexport async function checkForecast (city){\n    const response = await fetch(apiURL_forecast + '&appid='+apiKey + '&q=' +city);\n    var data = await response.json();\n    return data;\n}\n\nexport async function getTemp (city){\n    const response = await fetch(apiURL + '&appid='+apiKey + '&q=' +city);\n    var data = await response.json();\n    return data;\n}\n\n\nexport const getMaxTempt =  function(dayOffset, forecast){\n    let values = [];\n    let day = new Date().getDay() + dayOffset;\n    day = (day > 6)? day% 7 : day;\n    let dayTxt = new Date(forecast[0].dt* 1000).getDay();\n\n    for (let i = 0; i < forecast.length ; i++){\n        if(dayTxt == day){\n            values.push(forecast[i].main.temp);\n        }\n        dayTxt = new Date(forecast[i].dt* 1000).getDay();\n    }\n    return Math.max(...values).toFixed(0);\n}\n\nexport const getMinTempt =  function(dayOffset, forecast){\n    let values = [];\n    let day = new Date().getDay() + dayOffset;\n    day = (day > 6)? day% 7 : day;\n    let dayTxt = new Date(forecast[0].dt* 1000).getDay();\n\n    for (let i = 0; i < forecast.length ; i++){\n        if(dayTxt == day){\n            values.push(forecast[i].main.temp);\n        }\n        dayTxt = new Date(forecast[i].dt* 1000).getDay();\n    }\n    return Math.min(...values).toFixed(0);\n}\n\n\nexport const getDay = function(i){\n    let dayTxt = new Date().getDay() -1 + i;\n    dayTxt = (dayTxt> 6)? dayTxt%7 : dayTxt;\n    return days[dayTxt];\n}\n\n//console.log(forecastData);\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}