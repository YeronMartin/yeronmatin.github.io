{"ast":null,"code":"var _jsxFileName = \"/Users/yeronmartin/Desktop/web/src/js/weatherAppManager.js\",\n  _s = $RefreshSig$();\nimport { type } from '@testing-library/user-event/dist/type';\nimport { useState, useContext, useEffect } from 'react';\nimport React from 'react';\nimport { checkWeather, checkForecast } from './watherScript';\nimport { capitalizeFirstLetter } from './variables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AppManagerContext = /*#__PURE__*/React.createContext();\nexport function AppManagerContextProvider(props) {\n  _s();\n  /* VARIABLES */\n\n  //Global\n  const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight]);\n  const [inputText, setInputText] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [isRotated, setIsRotated] = useState(false);\n\n  //States\n  const [citySection_state, setCitySection_state] = useState('Active');\n  const [background_state, setBackground_state] = useState('Down');\n\n  //Data\n  const [data, setData] = useState({\n    weather: {\n      name: '',\n      main: {\n        humidity: 0,\n        pressure: 0,\n        temp: 0.00,\n        temp_max: 0.00,\n        temp_min: 0.00\n      },\n      visibility: 0,\n      wind: {\n        speed: 0\n      }\n    },\n    forecast: [{\n      dt: 1688245200,\n      main: {\n        temp: 0\n      }\n    }]\n  });\n\n  //City List\n  const [currentId, setCurrentId] = useState(2);\n  const [cityList, setCityList] = useState([{\n    city: '',\n    temp: 0,\n    id: 0\n  }, {\n    city: '',\n    temp: 0,\n    id: 1\n  }]);\n  const [cityNames, setCityNames] = useState(['Madrid', 'London']);\n\n  /* FUNCTIONS */\n\n  //Buttons\n  const arrowButton_OnClick = function () {\n    setSelectedCity('');\n    setData({\n      weather: {\n        name: '',\n        main: {\n          humidity: 0,\n          pressure: 0,\n          temp: 0.00,\n          temp_max: 0.00,\n          temp_min: 0.00\n        },\n        visibility: 0,\n        wind: {\n          speed: 0\n        }\n      },\n      forecast: [{\n        dt: 1688245200,\n        main: {\n          temp: 0\n        }\n      }]\n    });\n  };\n  const addCity = async function (c) {\n    let data = await checkWeather(c);\n    const str = capitalizeFirstLetter(c.toLowerCase());\n    if (data.hasOwnProperty('weather') && !cityNames.includes(str)) {\n      setCityList([...cityList, {\n        city: str,\n        temp: data.main.temp.toFixed(0),\n        id: currentId\n      }]);\n      setCurrentId(currentId + 1);\n      setCityNames([...cityNames, str]);\n    }\n  };\n  const handleSubmit = async function (e) {\n    // Prevent the browser from reloading the page\n    e.preventDefault();\n    console.log(inputText);\n    checkData(inputText);\n  };\n  const onChangeHandle = function (e) {\n    setInputText(e.target.value);\n  };\n\n  //Data \n  const getData = async function (city) {\n    const dat = await checkWeather(city);\n    const forecast = await checkForecast(city);\n    setData({\n      ...data,\n      // copy the current properties of \"json\"\n      weather: {\n        name: dat.name,\n        main: {\n          humidity: dat.main.humidity,\n          pressure: dat.main.pressure,\n          temp: dat.main.temp,\n          temp_max: dat.main.temp_max,\n          temp_min: dat.main.temp_min\n        },\n        visibility: dat.visibility,\n        wind: {\n          speed: dat.wind.speed\n        }\n      },\n      forecast: forecast.list\n    });\n  };\n\n  /* USE EFFECTS */\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWindowSize([window.innerWidth, window.innerHeight]);\n    };\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [windowSize]);\n  useEffect(() => {\n    if (selectedCity != '') {\n      getData(selectedCity);\n      setInputText('');\n    }\n  }, [selectedCity]);\n  useEffect(() => {\n    selectedCity == '' ? setCitySection_state('Active') : setCitySection_state('Hidden');\n    data.weather.name != '' ? setBackground_state('Up') : setBackground_state('Down');\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppManagerContext.Provider, {\n      value: {\n        windowSize,\n        inputText,\n        data,\n        setData,\n        setInputText,\n        addCity,\n        selectedCity,\n        setSelectedCity,\n        citySection_state,\n        setCitySection_state,\n        isRotated,\n        setIsRotated,\n        background_state,\n        arrowButton_OnClick,\n        handleSubmit,\n        onChangeHandle\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(AppManagerContextProvider, \"TV7oIrS4Tk+a0BLvodyw5dV1dbg=\");\n_c = AppManagerContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppManagerContextProvider\");","map":{"version":3,"names":["type","useState","useContext","useEffect","React","checkWeather","checkForecast","capitalizeFirstLetter","jsxDEV","_jsxDEV","Fragment","_Fragment","AppManagerContext","createContext","AppManagerContextProvider","props","_s","windowSize","setWindowSize","window","innerWidth","innerHeight","inputText","setInputText","selectedCity","setSelectedCity","isRotated","setIsRotated","citySection_state","setCitySection_state","background_state","setBackground_state","data","setData","weather","name","main","humidity","pressure","temp","temp_max","temp_min","visibility","wind","speed","forecast","dt","currentId","setCurrentId","cityList","setCityList","city","id","cityNames","setCityNames","arrowButton_OnClick","addCity","c","str","toLowerCase","hasOwnProperty","includes","toFixed","handleSubmit","e","preventDefault","console","log","checkData","onChangeHandle","target","value","getData","dat","list","handleWindowResize","addEventListener","removeEventListener","children","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeronmartin/Desktop/web/src/js/weatherAppManager.js"],"sourcesContent":["import { type } from '@testing-library/user-event/dist/type';\nimport { useState, useContext, useEffect } from 'react';\nimport React from 'react'\nimport { checkWeather, checkForecast } from './watherScript';\nimport { capitalizeFirstLetter } from './variables';\n\nexport const AppManagerContext = React.createContext();\n\nexport function AppManagerContextProvider (props) {\n\n    /* VARIABLES */\n\n    //Global\n    const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight,]);\n    const [inputText, setInputText] = useState ('');\n    const [selectedCity, setSelectedCity] = useState('');\n    const [isRotated, setIsRotated] = useState(false);\n\n\n    //States\n    const [citySection_state, setCitySection_state] = useState ('Active');\n    const [background_state, setBackground_state] = useState('Down');\n\n\n\n    //Data\n    const [data, setData] = useState({\n        weather: {\n            name: '', \n            main: {\n                humidity: 0,\n                pressure: 0, \n                temp: 0.00,\n                temp_max: 0.00,\n                temp_min: 0.00 \n            },\n            visibility: 0,\n            wind: {speed: 0}\n        },\n        forecast : [{\n            dt : 1688245200,\n            main :{\n                temp: 0\n            }\n        }]\n    });\n\n    //City List\n    const [currentId, setCurrentId] = useState(2);\n    const [cityList, setCityList] = useState ([{city: '', temp: 0, id:0}, \n    {city: '', temp: 0, id:1}]);\n    const [cityNames, setCityNames] = useState(['Madrid', 'London']);\n\n    /* FUNCTIONS */\n\n    //Buttons\n    const arrowButton_OnClick = function(){\n        setSelectedCity('');\n        setData(({\n          weather: {\n            name: '', \n            main: {\n              humidity: 0,\n              pressure: 0, \n              temp: 0.00,\n              temp_max: 0.00,\n              temp_min: 0.00 \n            },\n            visibility: 0,\n            wind: {speed: 0}\n          },\n          forecast : [{\n            dt : 1688245200,\n            main :{\n              temp: 0\n            }\n          }]\n        }));\n    }\n\n    const addCity = async function(c) {\n        let data = await checkWeather(c);\n        const str = capitalizeFirstLetter(c.toLowerCase());\n        \n        if (data.hasOwnProperty('weather') && !cityNames.includes(str)){\n          setCityList([...cityList, {city: str, temp: data.main.temp.toFixed(0), id: currentId}]);\n          setCurrentId(currentId + 1);\n          setCityNames([...cityNames, str]);\n    \n        }\n    }\n\n    const handleSubmit = async function(e) {\n        // Prevent the browser from reloading the page\n        e.preventDefault();\n        console.log(inputText);\n        checkData(inputText);\n      } \n      const onChangeHandle = function (e) {\n        setInputText(e.target.value);\n        \n      };\n\n    //Data \n    const getData= async function(city){\n        const dat = await checkWeather(city);\n        const forecast = await checkForecast(city)\n        setData({\n          ...data, // copy the current properties of \"json\"\n          weather: {\n            name: dat.name,\n            main: {\n              humidity: dat.main.humidity,\n              pressure: dat.main.pressure, \n              temp: dat.main.temp,\n              temp_max: dat.main.temp_max,\n              temp_min: dat.main.temp_min \n            },\n            visibility: dat.visibility,\n            wind: {\n              speed: dat.wind.speed\n            }\n          },\n          forecast : forecast.list\n        });\n    }\n    \n    /* USE EFFECTS */\n    useEffect(() => {\n        const handleWindowResize = () => {\n          setWindowSize([window.innerWidth, window.innerHeight]);\n        };\n    \n        window.addEventListener('resize', handleWindowResize);\n    \n        return () => {\n          window.removeEventListener('resize', handleWindowResize);\n        };\n      }, [windowSize]);\n     \n      useEffect (() => {\n        if(selectedCity != ''){\n         getData(selectedCity); \n         setInputText('');\n        }\n      }, [selectedCity]);\n\n      useEffect (() => {\n        (selectedCity == '') ?  setCitySection_state('Active') :  setCitySection_state('Hidden');\n        (data.weather.name != '') ? setBackground_state('Up') : setBackground_state('Down');\n    \n      }, [data]);\n\n\n    return (\n        <>\n            <AppManagerContext.Provider value={{windowSize, inputText, data, setData, setInputText, addCity, selectedCity, setSelectedCity,\n            citySection_state, setCitySection_state, isRotated, setIsRotated, background_state, arrowButton_OnClick, handleSubmit, onChangeHandle}}>\n                {props.children}\n            </AppManagerContext.Provider>\n        </>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}