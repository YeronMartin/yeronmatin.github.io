{"ast":null,"code":"var _jsxFileName = \"/Users/yeronmartin/Desktop/web/src/App.js\",\n  _s = $RefreshSig$();\nimport './css/style.css';\nimport React, { useState, useEffect } from 'react';\nimport { CitiesSection } from './components/CitiesSection';\nimport { DataSection } from './components/DataSection';\nimport { checkWeather } from './js/watherScript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [data, setData] = useState({\n    name: '',\n    main: {\n      humidity: 0,\n      pressure: 0,\n      temp: 0.00,\n      temp_max: 0.00,\n      temp_min: 0.00\n    },\n    wind: {\n      speed: 0\n    }\n  });\n  useEffect(() => {\n    if (selectedCity != '') {\n      getData(selectedCity);\n      setData({\n        ...data.name,\n        main: {\n          humidity: 0,\n          pressure: 0,\n          temp: 0.00,\n          temp_max: 0.00,\n          temp_min: 0.00\n        },\n        ...data.wind\n      });\n    }\n  }, [selectedCity]);\n  const getData = async function (city) {\n    const dat = await checkWeather(city);\n    //console.log(dat);\n    setData({\n      ...dat\n    });\n  };\n  let submitInput = function () {\n    console.log(inputText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CitiesSection, {\n      inputText: inputText,\n      setInputText: setInputText,\n      submitInput: submitInput,\n      selectedCity: selectedCity,\n      setSelectedCity: setSelectedCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DataSection, {\n      inputText: inputText,\n      data: data,\n      selectedCity: selectedCity,\n      setSelectedCity: setSelectedCity,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JJ5w67ZBPXRgTDZd5wq7mjoM+Us=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CitiesSection","DataSection","checkWeather","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","selectedCity","setSelectedCity","data","setData","name","main","humidity","pressure","temp","temp_max","temp_min","wind","speed","getData","city","dat","submitInput","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeronmartin/Desktop/web/src/App.js"],"sourcesContent":["import './css/style.css';\nimport React, { useState, useEffect } from 'react';\nimport { CitiesSection } from './components/CitiesSection';\nimport { DataSection } from './components/DataSection';\nimport { checkWeather } from './js/watherScript';\n\nfunction App() {\n  const [inputText, setInputText] = useState ('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [data, setData] = useState({\n    name:'', \n    main: {\n      humidity: 0,\n      pressure: 0, \n      temp: 0.00,\n      temp_max: 0.00,\n      temp_min: 0.00 \n    }, \n    wind: {speed: 0}\n  });\n\n\n  useEffect (() => {\n    if(selectedCity != ''){\n      getData(selectedCity);\n\n      setData({...data.name,\n        main: {\n          humidity: 0,\n          pressure: 0, \n          temp: 0.00,\n          temp_max: 0.00,\n          temp_min: 0.00 \n        }, ...data.wind\n      });\n    }\n   \n  }, [selectedCity]);\n\n  const getData= async function(city){\n    const dat = await checkWeather(city);\n    //console.log(dat);\n    setData({...dat});\n  }\n\n  let submitInput = function (){\n    console.log(inputText);\n  }\n\n  return (\n    <div className=\"App\">\n    <CitiesSection inputText= {inputText} setInputText = {setInputText} submitInput= {submitInput}\n    selectedCity = {selectedCity} setSelectedCity = {setSelectedCity}/>\n    <DataSection inputText= {inputText}  data = {data} \n    selectedCity = {selectedCity} setSelectedCity = {setSelectedCity} setData={setData}/>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,YAAY,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAE,EAAE,CAAC;EAC/C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC;IAC/Be,IAAI,EAAC,EAAE;IACPC,IAAI,EAAE;MACJC,QAAQ,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC;MACXC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;IACZ,CAAC;IACDC,IAAI,EAAE;MAACC,KAAK,EAAE;IAAC;EACjB,CAAC,CAAC;EAGFtB,SAAS,CAAE,MAAM;IACf,IAAGU,YAAY,IAAI,EAAE,EAAC;MACpBa,OAAO,CAACb,YAAY,CAAC;MAErBG,OAAO,CAAC;QAAC,GAAGD,IAAI,CAACE,IAAI;QACnBC,IAAI,EAAE;UACJC,QAAQ,EAAE,CAAC;UACXC,QAAQ,EAAE,CAAC;UACXC,IAAI,EAAE,IAAI;UACVC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE;QACZ,CAAC;QAAE,GAAGR,IAAI,CAACS;MACb,CAAC,CAAC;IACJ;EAEF,CAAC,EAAE,CAACX,YAAY,CAAC,CAAC;EAElB,MAAMa,OAAO,GAAE,eAAAA,CAAeC,IAAI,EAAC;IACjC,MAAMC,GAAG,GAAG,MAAMtB,YAAY,CAACqB,IAAI,CAAC;IACpC;IACAX,OAAO,CAAC;MAAC,GAAGY;IAAG,CAAC,CAAC;EACnB,CAAC;EAED,IAAIC,WAAW,GAAG,SAAAA,CAAA,EAAW;IAC3BC,OAAO,CAACC,GAAG,CAACpB,SAAS,CAAC;EACxB,CAAC;EAED,oBACEH,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpBzB,OAAA,CAACJ,aAAa;MAACO,SAAS,EAAGA,SAAU;MAACC,YAAY,EAAIA,YAAa;MAACiB,WAAW,EAAGA,WAAY;MAC9FhB,YAAY,EAAIA,YAAa;MAACC,eAAe,EAAIA;IAAgB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnE7B,OAAA,CAACH,WAAW;MAACM,SAAS,EAAGA,SAAU;MAAEI,IAAI,EAAIA,IAAK;MAClDF,YAAY,EAAIA,YAAa;MAACC,eAAe,EAAIA,eAAgB;MAACE,OAAO,EAAEA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhF,CAAC;AAEV;AAAC3B,EAAA,CApDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}