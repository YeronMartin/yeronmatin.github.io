{"ast":null,"code":"var _jsxFileName = \"/Users/yeronmartin/Desktop/web/src/js/weatherAppManager.js\",\n  _s = $RefreshSig$();\nimport { type } from '@testing-library/user-event/dist/type';\nimport { useState, useContext, useEffect } from 'react';\nimport React from 'react';\nimport { checkWeather } from './watherScript';\nimport { capitalizeFirstLetter } from './variables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AppManagerContext = /*#__PURE__*/React.createContext();\nexport function AppManagerContextProvider(props) {\n  _s();\n  const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight]);\n  const [inputText, setInputText] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [dataHidden, setDataHidden] = useState(true);\n  const [data, setData] = useState({\n    weather: {\n      name: '',\n      main: {\n        humidity: 0,\n        pressure: 0,\n        temp: 0.00,\n        temp_max: 0.00,\n        temp_min: 0.00\n      },\n      visibility: 0,\n      wind: {\n        speed: 0\n      }\n    },\n    forecast: [{\n      dt: 1688245200,\n      main: {\n        temp: 0\n      }\n    }]\n  });\n\n  //City List\n  const [currentId, setCurrentId] = useState(2);\n  const [cityList, setCityList] = useState([{\n    city: '',\n    temp: 0,\n    id: 0\n  }, {\n    city: '',\n    temp: 0,\n    id: 1\n  }]);\n  const [cityNames, setCityNames] = useState(['Madrid', 'London']);\n  const addCity = async function (c) {\n    let data = await checkWeather(c);\n    const str = capitalizeFirstLetter(c.toLowerCase());\n    if (data.hasOwnProperty('weather') && !cityNames.includes(str)) {\n      setCityList([...cityList, {\n        city: str,\n        temp: data.main.temp.toFixed(0),\n        id: currentId\n      }]);\n      setCurrentId(currentId + 1);\n      setCityNames([...cityNames, str]);\n    }\n  };\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWindowSize([window.innerWidth, window.innerHeight]);\n    };\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [windowSize]);\n  useEffect(() => {\n    if (selectedCity != '') {\n      getData(selectedCity);\n      setInputText('');\n    }\n  }, [selectedCity]);\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppManagerContext.Provider, {\n      value: {\n        windowSize,\n        inputText,\n        setInputText,\n        addCity,\n        selectedCity,\n        setSelectedCity\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(AppManagerContextProvider, \"HFs5cmx3z5DJ8fRK0hfZjD6q6S0=\");\n_c = AppManagerContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppManagerContextProvider\");","map":{"version":3,"names":["type","useState","useContext","useEffect","React","checkWeather","capitalizeFirstLetter","jsxDEV","_jsxDEV","Fragment","_Fragment","AppManagerContext","createContext","AppManagerContextProvider","props","_s","windowSize","setWindowSize","window","innerWidth","innerHeight","inputText","setInputText","selectedCity","setSelectedCity","dataHidden","setDataHidden","data","setData","weather","name","main","humidity","pressure","temp","temp_max","temp_min","visibility","wind","speed","forecast","dt","currentId","setCurrentId","cityList","setCityList","city","id","cityNames","setCityNames","addCity","c","str","toLowerCase","hasOwnProperty","includes","toFixed","handleWindowResize","addEventListener","removeEventListener","getData","console","log","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeronmartin/Desktop/web/src/js/weatherAppManager.js"],"sourcesContent":["import { type } from '@testing-library/user-event/dist/type';\nimport { useState, useContext, useEffect } from 'react';\nimport React from 'react'\nimport { checkWeather } from './watherScript';\nimport { capitalizeFirstLetter } from './variables';\n\nexport const AppManagerContext = React.createContext();\n\nexport function AppManagerContextProvider (props) {\n    const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight,]);\n    const [inputText, setInputText] = useState ('');\n    const [selectedCity, setSelectedCity] = useState('');\n    const [dataHidden, setDataHidden] = useState (true);\n\n  const [data, setData] = useState({\n    weather: {\n      name: '', \n      main: {\n        humidity: 0,\n        pressure: 0, \n        temp: 0.00,\n        temp_max: 0.00,\n        temp_min: 0.00 \n      },\n      visibility: 0,\n      wind: {speed: 0}\n    },\n    forecast : [{\n      dt : 1688245200,\n      main :{\n        temp: 0\n      }\n    }]\n  });\n\n    //City List\n    const [currentId, setCurrentId] = useState(2);\n    const [cityList, setCityList] = useState ([{city: '', temp: 0, id:0}, \n    {city: '', temp: 0, id:1}]);\n    const [cityNames, setCityNames] = useState(['Madrid', 'London']);\n\n    const addCity = async function(c) {\n        let data = await checkWeather(c);\n        const str = capitalizeFirstLetter(c.toLowerCase());\n        \n        if (data.hasOwnProperty('weather') && !cityNames.includes(str)){\n          setCityList([...cityList, {city: str, temp: data.main.temp.toFixed(0), id: currentId}]);\n          setCurrentId(currentId + 1);\n          setCityNames([...cityNames, str]);\n    \n        }\n    } \n\n    useEffect(() => {\n        const handleWindowResize = () => {\n          setWindowSize([window.innerWidth, window.innerHeight]);\n        };\n    \n        window.addEventListener('resize', handleWindowResize);\n    \n        return () => {\n          window.removeEventListener('resize', handleWindowResize);\n        };\n      }, [windowSize]);\n     \n      useEffect (() => {\n        if(selectedCity != ''){\n         getData(selectedCity); \n         setInputText('');\n        }\n      }, [selectedCity]);\n    \n      useEffect (() => {\n        console.log(data);\n      }, [data]);\n\n\n    return (\n        <>\n            <AppManagerContext.Provider value={{windowSize, inputText, setInputText, addCity, selectedCity, setSelectedCity}}>\n                {props.children}\n            </AppManagerContext.Provider>\n        </>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}