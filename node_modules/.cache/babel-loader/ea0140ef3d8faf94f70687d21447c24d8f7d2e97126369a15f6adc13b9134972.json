{"ast":null,"code":"var _jsxFileName = \"/Users/yeronmartin/Desktop/web/src/App.js\",\n  _s = $RefreshSig$();\nimport './css/style.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { CitiesSection } from './components/CitiesSection';\nimport { DataSection } from './components/DataSection';\nimport { checkForecast, checkWeather } from './js/watherScript';\nimport { Background } from './components/Background';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const windowSize = useRef([window.innerWidth, window.innerHeight]);\n  const [inputText, setInputText] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [data, setData] = useState({\n    weather: {\n      name: '',\n      main: {\n        humidity: 0,\n        pressure: 0,\n        temp: 0.00,\n        temp_max: 0.00,\n        temp_min: 0.00\n      },\n      visibility: 0,\n      wind: {\n        speed: 0\n      }\n    },\n    forecast: [{\n      dt: 1688245200,\n      main: {\n        temp: 0\n      }\n    }]\n  });\n  const [screenSize, setScreenSize] = useState(getCurrentDimension());\n  function getCurrentDimension() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n  useEffect(() => {\n    if (selectedCity != '') {\n      getData(selectedCity);\n      setInputText('');\n    }\n  }, [selectedCity]);\n  useEffect(() => {\n    const updateDimension = () => {\n      setScreenSize(getCurrentDimension());\n    };\n    window.addEventListener('resize', updateDimension);\n    return () => {\n      window.removeEventListener('resize', updateDimension);\n    };\n  }, [screenSize]);\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  const getData = async function (city) {\n    const dat = await checkWeather(city);\n    const forecast = await checkForecast(city);\n    setData({\n      ...data,\n      // copy the current properties of \"json\"\n      weather: {\n        name: dat.name,\n        main: {\n          humidity: dat.main.humidity,\n          pressure: dat.main.pressure,\n          temp: dat.main.temp,\n          temp_max: dat.main.temp_max,\n          temp_min: dat.main.temp_min\n        },\n        visibility: dat.visibility,\n        wind: {\n          speed: dat.wind.speed\n        }\n      },\n      forecast: forecast.list\n    });\n  };\n  let submitInput = function () {\n    console.log(inputText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CitiesSection, {\n      inputText: inputText,\n      setInputText: setInputText,\n      submitInput: submitInput,\n      selectedCity: selectedCity,\n      setSelectedCity: setSelectedCity,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DataSection, {\n      inputText: inputText,\n      data: data,\n      selectedCity: selectedCity,\n      setSelectedCity: setSelectedCity,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Background, {\n      data: data,\n      selectedCity: selectedCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JsaziceYY8e2h/QdxSUAR+xYFos=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","CitiesSection","DataSection","checkForecast","checkWeather","Background","jsxDEV","_jsxDEV","App","_s","windowSize","window","innerWidth","innerHeight","inputText","setInputText","selectedCity","setSelectedCity","data","setData","weather","name","main","humidity","pressure","temp","temp_max","temp_min","visibility","wind","speed","forecast","dt","screenSize","setScreenSize","getCurrentDimension","width","height","getData","updateDimension","addEventListener","removeEventListener","console","log","city","dat","list","submitInput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yeronmartin/Desktop/web/src/App.js"],"sourcesContent":["import './css/style.css';\nimport React, { useState, useEffect, useRef} from 'react';\nimport { CitiesSection } from './components/CitiesSection';\nimport { DataSection } from './components/DataSection';\nimport { checkForecast, checkWeather } from './js/watherScript';\nimport { Background } from './components/Background';\n\n\nfunction App() {\n  const windowSize = useRef([window.innerWidth, window.innerHeight]);\n  const [inputText, setInputText] = useState ('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [data, setData] = useState({\n    weather: {\n      name: '', \n      main: {\n        humidity: 0,\n        pressure: 0, \n        temp: 0.00,\n        temp_max: 0.00,\n        temp_min: 0.00 \n      },\n      visibility: 0,\n      wind: {speed: 0}\n    },\n    forecast : [{\n      dt : 1688245200,\n      main :{\n        temp: 0\n      }\n    }]\n  });\n  const [screenSize, setScreenSize] = useState(getCurrentDimension());\n\n  function getCurrentDimension(){\n    return {\n      \twidth: window.innerWidth,\n      \theight: window.innerHeight\n    }\n  }\n\n  useEffect (() => {\n    if(selectedCity != ''){\n     getData(selectedCity); \n     setInputText('');\n    }\n  }, [selectedCity]);\n\n  useEffect(() => {\n    const updateDimension = () => {\n        setScreenSize(getCurrentDimension())\n    }\n    window.addEventListener('resize', updateDimension);\n\n\n    return(() => {\n        window.removeEventListener('resize', updateDimension);\n    })\n  }, [screenSize]);\n  \n  useEffect (() => {\n    console.log(data);\n  }, [data]);\n  \n\n  const getData= async function(city){\n    const dat = await checkWeather(city);\n    const forecast = await checkForecast(city)\n    setData({\n      ...data, // copy the current properties of \"json\"\n      weather: {\n        name: dat.name,\n        main: {\n          humidity: dat.main.humidity,\n          pressure: dat.main.pressure, \n          temp: dat.main.temp,\n          temp_max: dat.main.temp_max,\n          temp_min: dat.main.temp_min \n        },\n        visibility: dat.visibility,\n        wind: {\n          speed: dat.wind.speed\n        }\n      },\n      forecast : forecast.list\n    });\n  }\n\n  let submitInput = function (){\n    console.log(inputText);\n  }\n\n  return (\n    <div className=\"App\">\n    <CitiesSection inputText= {inputText} setInputText = {setInputText} submitInput= {submitInput}\n    selectedCity = {selectedCity} setSelectedCity = {setSelectedCity} data = {data}/>\n    <DataSection inputText= {inputText}  data = {data} selectedCity = {selectedCity}\n     setSelectedCity = {setSelectedCity} setData={setData}/>\n     <Background data = {data} selectedCity = {selectedCity}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACzD,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,aAAa,EAAEC,YAAY,QAAQ,mBAAmB;AAC/D,SAASC,UAAU,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,UAAU,GAAGV,MAAM,CAAC,CAACW,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC,CAAC;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAE,EAAE,CAAC;EAC/C,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC;IAC/BsB,OAAO,EAAE;MACPC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE;QACJC,QAAQ,EAAE,CAAC;QACXC,QAAQ,EAAE,CAAC;QACXC,IAAI,EAAE,IAAI;QACVC,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE;MACZ,CAAC;MACDC,UAAU,EAAE,CAAC;MACbC,IAAI,EAAE;QAACC,KAAK,EAAE;MAAC;IACjB,CAAC;IACDC,QAAQ,EAAG,CAAC;MACVC,EAAE,EAAG,UAAU;MACfV,IAAI,EAAE;QACJG,IAAI,EAAE;MACR;IACF,CAAC;EACH,CAAC,CAAC;EACF,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGpC,QAAQ,CAACqC,mBAAmB,CAAC,CAAC,CAAC;EAEnE,SAASA,mBAAmBA,CAAA,EAAE;IAC5B,OAAO;MACJC,KAAK,EAAEzB,MAAM,CAACC,UAAU;MACxByB,MAAM,EAAE1B,MAAM,CAACE;IAClB,CAAC;EACH;EAEAd,SAAS,CAAE,MAAM;IACf,IAAGiB,YAAY,IAAI,EAAE,EAAC;MACrBsB,OAAO,CAACtB,YAAY,CAAC;MACrBD,YAAY,CAAC,EAAE,CAAC;IACjB;EACF,CAAC,EAAE,CAACC,YAAY,CAAC,CAAC;EAElBjB,SAAS,CAAC,MAAM;IACd,MAAMwC,eAAe,GAAGA,CAAA,KAAM;MAC1BL,aAAa,CAACC,mBAAmB,CAAC,CAAC,CAAC;IACxC,CAAC;IACDxB,MAAM,CAAC6B,gBAAgB,CAAC,QAAQ,EAAED,eAAe,CAAC;IAGlD,OAAO,MAAM;MACT5B,MAAM,CAAC8B,mBAAmB,CAAC,QAAQ,EAAEF,eAAe,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhBlC,SAAS,CAAE,MAAM;IACf2C,OAAO,CAACC,GAAG,CAACzB,IAAI,CAAC;EACnB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAGV,MAAMoB,OAAO,GAAE,eAAAA,CAAeM,IAAI,EAAC;IACjC,MAAMC,GAAG,GAAG,MAAMzC,YAAY,CAACwC,IAAI,CAAC;IACpC,MAAMb,QAAQ,GAAG,MAAM5B,aAAa,CAACyC,IAAI,CAAC;IAC1CzB,OAAO,CAAC;MACN,GAAGD,IAAI;MAAE;MACTE,OAAO,EAAE;QACPC,IAAI,EAAEwB,GAAG,CAACxB,IAAI;QACdC,IAAI,EAAE;UACJC,QAAQ,EAAEsB,GAAG,CAACvB,IAAI,CAACC,QAAQ;UAC3BC,QAAQ,EAAEqB,GAAG,CAACvB,IAAI,CAACE,QAAQ;UAC3BC,IAAI,EAAEoB,GAAG,CAACvB,IAAI,CAACG,IAAI;UACnBC,QAAQ,EAAEmB,GAAG,CAACvB,IAAI,CAACI,QAAQ;UAC3BC,QAAQ,EAAEkB,GAAG,CAACvB,IAAI,CAACK;QACrB,CAAC;QACDC,UAAU,EAAEiB,GAAG,CAACjB,UAAU;QAC1BC,IAAI,EAAE;UACJC,KAAK,EAAEe,GAAG,CAAChB,IAAI,CAACC;QAClB;MACF,CAAC;MACDC,QAAQ,EAAGA,QAAQ,CAACe;IACtB,CAAC,CAAC;EACJ,CAAC;EAED,IAAIC,WAAW,GAAG,SAAAA,CAAA,EAAW;IAC3BL,OAAO,CAACC,GAAG,CAAC7B,SAAS,CAAC;EACxB,CAAC;EAED,oBACEP,OAAA;IAAKyC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACpB1C,OAAA,CAACN,aAAa;MAACa,SAAS,EAAGA,SAAU;MAACC,YAAY,EAAIA,YAAa;MAACgC,WAAW,EAAGA,WAAY;MAC9F/B,YAAY,EAAIA,YAAa;MAACC,eAAe,EAAIA,eAAgB;MAACC,IAAI,EAAIA;IAAK;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjF9C,OAAA,CAACL,WAAW;MAACY,SAAS,EAAGA,SAAU;MAAEI,IAAI,EAAIA,IAAK;MAACF,YAAY,EAAIA,YAAa;MAC/EC,eAAe,EAAIA,eAAgB;MAACE,OAAO,EAAEA;IAAQ;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvD9C,OAAA,CAACF,UAAU;MAACa,IAAI,EAAIA,IAAK;MAACF,YAAY,EAAIA;IAAa;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV;AAAC5C,EAAA,CA7FQD,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AA+FZ,eAAeA,GAAG;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}