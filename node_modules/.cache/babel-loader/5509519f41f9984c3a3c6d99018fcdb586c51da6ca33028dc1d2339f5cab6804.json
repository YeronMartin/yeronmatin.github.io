{"ast":null,"code":"import { days } from '../js/variables.js';\nvar apiKey = 'f9892889e00ba696ec9d7c610b9e3f38';\nvar apiURL = 'https://api.openweathermap.org/data/2.5/weather?&units=metric&q=yeles';\nvar apiURL_forecast = 'https://api.openweathermap.org/data/2.5/forecast?&units=metric&q=yeles';\nasync function checkWather() {\n  const response = await fetch(apiURL + '&appid=' + apiKey);\n  var data = await response.json();\n  return data;\n}\nasync function checkForecast() {\n  const response = await fetch(apiURL_forecast + '&appid=' + apiKey);\n  var data = await response.json();\n  return data;\n}\nexport let weatherData = await checkWather();\nexport let forecastData = await checkForecast();\nexport const getWind = function () {\n  return (weatherData.wind.speed * 3.6).toFixed(0);\n};\nexport const getVisibility = function () {\n  return (weatherData.visibility / 1000).toFixed(0);\n};\nexport const getMaxTempt = function (dayOffset) {\n  let values = [];\n  let day = 1 + new Date().getDay();\n  let dayTxt = new Date(forecastData.list[0].dt * 1000).getDay();\n  console.log(\"day \" + new Date().getDay() + \" \" + dayTxt);\n  for (let i = 0; i < forecastData.list.length; i++) {\n    if (dayTxt == day) {\n      values.push(forecastData.list[i].main.temp);\n      console.log(values);\n    }\n    dayTxt = new Date(forecastData.list[i].dt * 1000).getDay();\n  }\n  return Math.max(...values).toFixed(0);\n};\nexport const getMinTempt = function (day) {\n  let values = [];\n  let dayTxt = new Date(forecastData.list[0].dt * 1000).getDay();\n  for (let i = 0; i < forecastData.list.length; i++) {\n    if (dayTxt == day) {\n      values.push(forecastData.list[i].main.temp);\n      //console.log(values);\n    }\n\n    dayTxt = new Date(forecastData.list[i].dt * 1000).getDay();\n  }\n  return Math.min(...values).toFixed(0);\n};\nexport const getDay = function (i) {\n  let dayTxt = new Date().getDay() - 1 + i;\n  dayTxt = dayTxt > 6 ? dayTxt % 6 : dayTxt;\n  return days[dayTxt];\n};\nconsole.log(forecastData);","map":{"version":3,"names":["days","apiKey","apiURL","apiURL_forecast","checkWather","response","fetch","data","json","checkForecast","weatherData","forecastData","getWind","wind","speed","toFixed","getVisibility","visibility","getMaxTempt","dayOffset","values","day","Date","getDay","dayTxt","list","dt","console","log","i","length","push","main","temp","Math","max","getMinTempt","min"],"sources":["/Users/yeronmartin/Desktop/web/src/js/watherScript.js"],"sourcesContent":["import {days} from '../js/variables.js';\n\nvar apiKey = 'f9892889e00ba696ec9d7c610b9e3f38';\nvar apiURL = 'https://api.openweathermap.org/data/2.5/weather?&units=metric&q=yeles';\nvar apiURL_forecast = 'https://api.openweathermap.org/data/2.5/forecast?&units=metric&q=yeles';\n\nasync function checkWather (){\n    const response = await fetch(apiURL + '&appid='+apiKey);\n    var data = await response.json();\n    return data;\n}\nasync function checkForecast (){\n    const response = await fetch(apiURL_forecast + '&appid='+apiKey);\n    var data = await response.json();\n    return data;\n}\nexport let weatherData =  await checkWather();\nexport let forecastData =  await checkForecast();\n\nexport const getWind =  function(){\n    return (weatherData.wind.speed * 3.6).toFixed(0); \n}\n\nexport const getVisibility =  function(){\n    return (weatherData.visibility /1000).toFixed(0); \n}\n\nexport const getMaxTempt =  function(dayOffset){\n    let values = [];\n    let day = 1 + new Date().getDay();\n    let dayTxt = new Date(forecastData.list[0].dt* 1000).getDay();\n\n    console.log(\"day \" + new Date().getDay() + \" \" + dayTxt);\n\n    for (let i = 0; i < forecastData.list.length ; i++){\n        if(dayTxt == day){\n            values.push(forecastData.list[i].main.temp);\n            console.log(values);\n        }\n        dayTxt = new Date(forecastData.list[i].dt* 1000).getDay();\n    \n        \n    }\n    return Math.max(...values).toFixed(0);\n}\n\nexport const getMinTempt =  function(day){\n    let values = [];\n    let dayTxt = new Date(forecastData.list[0].dt* 1000).getDay();\n\n    for (let i = 0; i < forecastData.list.length ; i++){\n        if(dayTxt == day){\n            values.push(forecastData.list[i].main.temp);\n            //console.log(values);\n            \n        }\n        dayTxt = new Date(forecastData.list[i].dt* 1000).getDay();\n        \n    }\n    return Math.min(...values).toFixed(0);\n}\n\n\nexport const getDay = function(i){\n    let dayTxt = new Date().getDay() -1 + i;\n    dayTxt = (dayTxt> 6)? dayTxt%6 : dayTxt;\n    return days[dayTxt];\n}\n\nconsole.log(forecastData);\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}